{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\nimport { serialize } from 'next-mdx-remote/serialize';\nimport { MDXRemote } from 'next-mdx-remote'; // import InstagramEmbed from \"react-instagram-embed\";\n// import YouTube from \"react-youtube\";\n\nimport axios from \"axios\"; // const components = { InstagramEmbed, YouTube};\n\nexport default function TestPage({\n  source\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(MDXRemote, _objectSpread({}, source), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  // const paths = fetchPostContent().map(it => \"/posts/\" + it.slug);\n  const posts = (await axios.get(`http://localhost:8000/api/post/`)).data;\n  const paths = posts.map(post => ({\n    params: {\n      post: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\n;\nexport async function getStaticProps({\n  params\n}) {\n  const slug = params.post;\n  const post = (await axios.get(`http://localhost:8000/api/post/${slug}/`)).data;\n  const source = 'Some **mdx** text, with a component';\n  const mdxSource = await serialize(source);\n  return {\n    props: {\n      title: post.title,\n      dateString: post.created,\n      slug: post.slug,\n      description: \"\",\n      tags: post.tags,\n      source: mdxSource\n    }\n  };\n}\n;","map":{"version":3,"sources":["/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js"],"names":["parseISO","PostLayout","serialize","MDXRemote","axios","TestPage","source","getStaticPaths","posts","get","data","paths","map","post","params","slug","fallback","getStaticProps","mdxSource","props","title","dateString","created","description","tags"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AAKA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA8B;AAC3C,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE,QAAC,SAAD,oBAAeA,MAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAGD,OAAO,eAAeC,cAAf,GAAiC;AACtC;AAEA,QAAMC,KAAK,GAAG,CAAC,MAAMJ,KAAK,CAACK,GAAN,CAAW,iCAAX,CAAP,EAAqDC,IAAnE;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AACjCC,IAAAA,MAAM,EAAE;AAAED,MAAAA,IAAI,EAAEA,IAAI,CAACE;AAAb;AADyB,GAAX,CAAV,CAAd;AAGA,SAAO;AACLJ,IAAAA,KADK;AAELK,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAAA;AAED,OAAO,eAAeC,cAAf,CAA+B;AAAEH,EAAAA;AAAF,CAA/B,EAA2C;AAChD,QAAMC,IAAI,GAAGD,MAAM,CAACD,IAApB;AACA,QAAMA,IAAI,GAAG,CAAC,MAAMT,KAAK,CAACK,GAAN,CAAW,kCAAiCM,IAAK,GAAjD,CAAP,EAA6DL,IAA1E;AACA,QAAMJ,MAAM,GAAG,qCAAf;AACA,QAAMY,SAAS,GAAG,MAAMhB,SAAS,CAACI,MAAD,CAAjC;AACA,SAAO;AACLa,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KADP;AAELC,MAAAA,UAAU,EAAER,IAAI,CAACS,OAFZ;AAGLP,MAAAA,IAAI,EAAEF,IAAI,CAACE,IAHN;AAILQ,MAAAA,WAAW,EAAE,EAJR;AAKLC,MAAAA,IAAI,EAAEX,IAAI,CAACW,IALN;AAMLlB,MAAAA,MAAM,EAAEY;AANH;AADF,GAAP;AAUD;AAAA","sourcesContent":["import { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\n\nimport { serialize } from 'next-mdx-remote/serialize'\nimport { MDXRemote } from 'next-mdx-remote'\n\n// import InstagramEmbed from \"react-instagram-embed\";\n// import YouTube from \"react-youtube\";\nimport axios from \"axios\";\n\n\n// const components = { InstagramEmbed, YouTube};\n\n\n\n\nexport default function TestPage({ source }) {\n  return (\n    <div className=\"wrapper\">\n      <MDXRemote {...source} />\n    </div>\n  )\n}\n\n\nexport async function getStaticPaths () {\n  // const paths = fetchPostContent().map(it => \"/posts/\" + it.slug);\n\n  const posts = (await axios.get(`http://localhost:8000/api/post/`)).data\n  const paths = posts.map((post) => ({\n    params: { post: post.slug },\n  }))\n  return {\n    paths,\n    fallback: false,\n  };\n};\n\nexport async function getStaticProps ({ params }) {\n  const slug = params.post;\n  const post = (await axios.get(`http://localhost:8000/api/post/${slug}/`)).data\n  const source = 'Some **mdx** text, with a component'\n  const mdxSource = await serialize(source);\n  return {\n    props: {\n      title: post.title,\n      dateString: post.created,\n      slug: post.slug,\n      description: \"\",\n      tags: post.tags,\n      source: mdxSource\n    },\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}