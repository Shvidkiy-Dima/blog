{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js\";\nimport { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var title = _ref.title,\n      dateString = _ref.dateString,\n      slug = _ref.slug,\n      tags = _ref.tags,\n      author = _ref.author,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? \"\" : _ref$description,\n      source = _ref.source;\n  return /*#__PURE__*/_jsxDEV(PostLayout, {\n    title: title,\n    date: parseISO(dateString),\n    slug: slug,\n    tags: tags,\n    author: author,\n    description: description,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: source\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = Post;\n;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js"],"names":["parseISO","PostLayout","Post","title","dateString","slug","tags","author","description","source","__html"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAYA,eAAe,SAASC,IAAT,OAQZ;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,8BAFDC,WAEC;AAAA,MAFDA,WAEC,iCAFa,EAEb;AAAA,MADDC,MACC,QADDA,MACC;AACD,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,IAAI,EAAEH,QAAQ,CAACI,UAAD,CAFhB;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEC,WANf;AAAA,2BAQQ;AAAK,MAAA,uBAAuB,EAAE;AAAEE,QAAAA,MAAM,EAAED;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KArBuBP,I;AAkCvB;AAgBA","sourcesContent":["import { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\nimport renderToString from \"next-mdx-remote/render-to-string\";\n\nimport InstagramEmbed from \"react-instagram-embed\";\nimport YouTube from \"react-youtube\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\nimport axios from \"axios\";\n\n\nconst components = { InstagramEmbed, YouTube, TwitterTweetEmbed };\n\n\nexport default function Post({\n  title,\n  dateString,\n  slug,\n  tags,\n  author,\n  description = \"\",\n  source,\n}) {\n  return (\n    <PostLayout\n      title={title}\n      date={parseISO(dateString)}\n      slug={slug}\n      tags={tags}\n      author={author}\n      description={description}\n    >\n            <div dangerouslySetInnerHTML={{ __html: source }} />\n    </PostLayout>\n  )\n}\n\nexport async function getStaticPaths () {\n  // const paths = fetchPostContent().map(it => \"/posts/\" + it.slug);\n\n  const posts = (await axios.get(`http://localhost:8000/api/post/`)).data\n  const paths = posts.map((post) => ({\n    params: { post: post.slug },\n  }))\n  return {\n    paths,\n    fallback: false,\n  };\n};\n\nexport async function getStaticProps ({ params }) {\n  const slug = params.post;\n  const post = (await axios.get(`http://localhost:8000/api/post/${slug}/`)).data\n  const mdxSource = await renderToString(post.content2, { components });\n  return {\n    props: {\n      title: post.title,\n      dateString: post.created,\n      slug: post.slug,\n      description: \"\",\n      tags: post.tags,\n      source: mdxSource\n    },\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}