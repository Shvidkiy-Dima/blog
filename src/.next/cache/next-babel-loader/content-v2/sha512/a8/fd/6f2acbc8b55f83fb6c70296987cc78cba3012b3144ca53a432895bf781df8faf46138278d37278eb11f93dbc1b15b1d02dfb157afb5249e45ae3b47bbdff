{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js\";\nimport { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\nimport { serialize } from 'next-mdx-remote/serialize';\nimport { MDXRemote } from 'next-mdx-remote'; // import InstagramEmbed from \"react-instagram-embed\";\n// import YouTube from \"react-youtube\";\n\nimport axios from \"axios\"; // const components = { InstagramEmbed, YouTube};\n\nexport default function Post({\n  title,\n  dateString,\n  slug,\n  tags,\n  author,\n  description = \"\",\n  source\n}) {\n  console.log(source);\n  return /*#__PURE__*/_jsxDEV(PostLayout, {\n    title: title,\n    date: parseISO(dateString),\n    slug: slug,\n    tags: tags,\n    author: author,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  // const paths = fetchPostContent().map(it => \"/posts/\" + it.slug);\n  const posts = (await axios.get(`http://localhost:8000/api/post/`)).data;\n  const paths = posts.map(post => ({\n    params: {\n      post: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\n;\nexport async function getStaticProps({\n  params\n}) {\n  const slug = params.post;\n  const post = (await axios.get(`http://localhost:8000/api/post/${slug}/`)).data;\n  const source = 'Some **mdx** text, with a component';\n  const mdxSource = await serialize(source);\n  return {\n    props: {\n      title: post.title,\n      dateString: post.created,\n      slug: post.slug,\n      description: \"\",\n      tags: post.tags,\n      source: mdxSource\n    }\n  };\n}\n;","map":{"version":3,"sources":["/home/borisov/PycharmProjects/startups/personal_blog/src/pages/posts/[post].js"],"names":["parseISO","PostLayout","serialize","MDXRemote","axios","Post","title","dateString","slug","tags","author","description","source","console","log","getStaticPaths","posts","get","data","paths","map","post","params","fallback","getStaticProps","mdxSource","props","created"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AAGA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA,KAD2B;AAE3BC,EAAAA,UAF2B;AAG3BC,EAAAA,IAH2B;AAI3BC,EAAAA,IAJ2B;AAK3BC,EAAAA,MAL2B;AAM3BC,EAAAA,WAAW,GAAG,EANa;AAO3BC,EAAAA;AAP2B,CAAd,EAQZ;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,IAAI,EAAEN,QAAQ,CAACO,UAAD,CAFhB;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEC;AANf;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED,OAAO,eAAeI,cAAf,GAAiC;AACtC;AAEA,QAAMC,KAAK,GAAG,CAAC,MAAMZ,KAAK,CAACa,GAAN,CAAW,iCAAX,CAAP,EAAqDC,IAAnE;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AACjCC,IAAAA,MAAM,EAAE;AAAED,MAAAA,IAAI,EAAEA,IAAI,CAACb;AAAb;AADyB,GAAX,CAAV,CAAd;AAGA,SAAO;AACLW,IAAAA,KADK;AAELI,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAAA;AAED,OAAO,eAAeC,cAAf,CAA+B;AAAEF,EAAAA;AAAF,CAA/B,EAA2C;AAChD,QAAMd,IAAI,GAAGc,MAAM,CAACD,IAApB;AACA,QAAMA,IAAI,GAAG,CAAC,MAAMjB,KAAK,CAACa,GAAN,CAAW,kCAAiCT,IAAK,GAAjD,CAAP,EAA6DU,IAA1E;AACA,QAAMN,MAAM,GAAG,qCAAf;AACA,QAAMa,SAAS,GAAG,MAAMvB,SAAS,CAACU,MAAD,CAAjC;AACA,SAAO;AACLc,IAAAA,KAAK,EAAE;AACLpB,MAAAA,KAAK,EAAEe,IAAI,CAACf,KADP;AAELC,MAAAA,UAAU,EAAEc,IAAI,CAACM,OAFZ;AAGLnB,MAAAA,IAAI,EAAEa,IAAI,CAACb,IAHN;AAILG,MAAAA,WAAW,EAAE,EAJR;AAKLF,MAAAA,IAAI,EAAEY,IAAI,CAACZ,IALN;AAMLG,MAAAA,MAAM,EAAEa;AANH;AADF,GAAP;AAUD;AAAA","sourcesContent":["import { parseISO } from 'date-fns';\nimport PostLayout from \"../../components/PostLayout\";\n\nimport { serialize } from 'next-mdx-remote/serialize'\nimport { MDXRemote } from 'next-mdx-remote'\n\n// import InstagramEmbed from \"react-instagram-embed\";\n// import YouTube from \"react-youtube\";\nimport axios from \"axios\";\n\n\n// const components = { InstagramEmbed, YouTube};\n\n\nexport default function Post({\n  title,\n  dateString,\n  slug,\n  tags,\n  author,\n  description = \"\",\n  source,\n}) {\n\n  console.log(source)\n\n  return (\n    <PostLayout\n      title={title}\n      date={parseISO(dateString)}\n      slug={slug}\n      tags={tags}\n      author={author}\n      description={description}\n    >\n    </PostLayout>\n  )\n}\n\nexport async function getStaticPaths () {\n  // const paths = fetchPostContent().map(it => \"/posts/\" + it.slug);\n\n  const posts = (await axios.get(`http://localhost:8000/api/post/`)).data\n  const paths = posts.map((post) => ({\n    params: { post: post.slug },\n  }))\n  return {\n    paths,\n    fallback: false,\n  };\n};\n\nexport async function getStaticProps ({ params }) {\n  const slug = params.post;\n  const post = (await axios.get(`http://localhost:8000/api/post/${slug}/`)).data\n  const source = 'Some **mdx** text, with a component'\n  const mdxSource = await serialize(source);\n  return {\n    props: {\n      title: post.title,\n      dateString: post.created,\n      slug: post.slug,\n      description: \"\",\n      tags: post.tags,\n      source: mdxSource\n    },\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}